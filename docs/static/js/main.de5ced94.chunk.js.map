{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categor","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAO,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,OAOd,2BACIO,KAAO,OACPC,MAAUT,EACVU,SApBc,SAAEP,GACxBF,EAAgBE,EAAEQ,OAAOF,Y,uBCNhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEP,kCACNC,EAHa,kBAEP,mCAFO,OAGaC,UAAWH,GAHxB,+DAIII,MAAOF,GAJX,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAeRM,GAfQ,4CAAH,sDCDXO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,UAMlBC,EDfwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAIpB,OACI,oCACI,wBAAIJ,UAAU,2DAAd,IAA2EhB,EAA3E,KACCoB,GAAW,uBAAGJ,UAAU,2CAAb,eACZ,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UESlBkB,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,mBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAE,EAAF,CAAcA,cAAkBA,IAChC,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,UCdjC8B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.de5ced94.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue ( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            \r\n            setcategories( categor => [inputValue, ...categor]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setcategories: PropTypes.func.isRequired\r\n\r\n}\r\n    ","\r\n\r\n\r\n    export const getGifs = async( category ) => {\r\n\r\n        const gif = 'api.giphy.com/v1/gifs/search?q='\r\n        const url = `https://${ gif }${ encodeURI( category ) }&limit=10&api_key=wlQbIB0e0OM1yhS5f4nJCKD6HMmGs9M8`;\r\n            const resp = await fetch( url );\r\n            const { data } = await resp.json();\r\n    \r\n            const gifs = data.map( img => {\r\n                return {\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n            } )\r\n    \r\n            return gifs; \r\n    \r\n        }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n   \r\n  \r\n\r\n    return (\r\n        <> \r\n            <h3 className='animate__animated animate__fadeInDown animate__delay-1s'> { category } </h3>\r\n            {loading && <p className='animate__animated animate__zoomOutRight'>...........</p>}\r\n            <div className='card-grid'>\r\n    \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id } \r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n    \r\n           \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }) \r\n    } )\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setcategories] = useState(['Dragon Ball GT'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            < AddCategory setcategories = { setcategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category= {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nconst divRoot = document.getElementById('root')\n\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}